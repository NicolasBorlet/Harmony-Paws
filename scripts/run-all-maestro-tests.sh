#!/bin/bash

# Script pour ex√©cuter tous les tests Maestro
# Utile pour la CI ou pour des tests complets manuels

echo "üé≠ Ex√©cution de tous les tests Maestro..."

# V√©rification que Maestro est install√©
if ! command -v maestro &> /dev/null; then
    echo "‚ùå Maestro n'est pas install√©. Veuillez l'installer avec:"
    echo "curl -Ls \"https://get.maestro.mobile.dev\" | bash"
    exit 1
fi

# Configuration des couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# V√©rification que l'application est d√©j√† lanc√©e ou qu'un √©mulateur/simulateur est disponible
echo -e "${YELLOW}‚ö†Ô∏è  Assurez-vous qu'un √©mulateur/simulateur est en cours d'ex√©cution${NC}"

# Compteurs pour les tests r√©ussis/√©chou√©s
SUCCESS_COUNT=0
FAILURE_COUNT=0
TOTAL_COUNT=0

# Fonction pour ex√©cuter les tests dans un dossier sp√©cifique
run_tests_in_directory() {
    local dir=$1
    local title=$2

    echo -e "\n${YELLOW}üìÅ Ex√©cution des tests ${title}...${NC}"

    # Compter le nombre de fichiers YAML dans le r√©pertoire
    local count=$(find "$dir" -name "*.yaml" | wc -l)
    if [ "$count" -eq 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Aucun test trouv√© dans ${dir}${NC}"
        return
    fi

    # Ex√©cuter chaque test dans le r√©pertoire
    for test in "$dir"/*.yaml; do
        if [ -f "$test" ]; then
            ((TOTAL_COUNT++))
            echo -e "\n${YELLOW}üöÄ Ex√©cution du test: ${test}${NC}"

            if maestro test "$test"; then
                echo -e "${GREEN}‚úÖ Test r√©ussi: ${test}${NC}"
                ((SUCCESS_COUNT++))
            else
                echo -e "${RED}‚ùå Test √©chou√©: ${test}${NC}"
                ((FAILURE_COUNT++))
            fi
        fi
    done
}

# Ex√©cuter les tests par cat√©gorie
run_tests_in_directory "maestro/components" "de composants"
run_tests_in_directory "maestro/screens" "d'√©crans"
run_tests_in_directory "maestro/flows" "de flows"

# Afficher le r√©sum√©
echo -e "\n${YELLOW}üìä R√©sum√© des tests:${NC}"
echo -e "Total des tests: ${TOTAL_COUNT}"
echo -e "${GREEN}‚úÖ Tests r√©ussis: ${SUCCESS_COUNT}${NC}"
echo -e "${RED}‚ùå Tests √©chou√©s: ${FAILURE_COUNT}${NC}"

# Sortir avec un code d'erreur si au moins un test a √©chou√©
if [ $FAILURE_COUNT -gt 0 ]; then
    echo -e "\n${RED}‚ùå Certains tests ont √©chou√©. Veuillez corriger les probl√®mes avant de continuer.${NC}"
    exit 1
else
    echo -e "\n${GREEN}‚úÖ Tous les tests ont r√©ussi!${NC}"
    exit 0
fi
